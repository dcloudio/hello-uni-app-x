<template>
  <view>
    <page-head :title="title"></page-head>
    <view class="uni-padding-wrap">
      <view class="uni-column content">
        <text class="uni-hello-text">位置信息</text>
        <text v-if="!hasLocation" class="uni-title-text uni-common-mt">未选择位置</text>
        <view v-if="hasLocation" style="align-items: center;">
          <text class="uni-common-mt">{{locationAddress}}</text>
          <view class="uni-common-mt" v-if="location.latitude.length>1">
            <text>E: {{location.longitude[0]}}°{{location.longitude[1]}}′</text>
            <text>\nN: {{location.latitude[0]}}°{{location.latitude[1]}}′</text>
          </view>
        </view>
      </view>
      <view class="uni-btn-v">
        <text class="tips">注意：Web和App需要正确配置地图服务商的Key并且保证Key的权限和余额足够，才能正常选择位置</text>
        <button type="primary" @tap="chooseLocation">选择位置</button>
        <button @tap="clear">清空</button>
      </view>
    </view>
  </view>
</template>
<script lang="uts">
  type Location = {
    latitude: string[]
    longitude: string[]
  }
  export default {
    data() {
      return {
        title: 'chooseLocation',
        hasLocation: false,
        location: {
          latitude: [],
          longitude: []
        } as Location,
        locationAddress: '',
        dialogPagesNum: -1
      }
    },
    methods: {
      chooseLocation: function () {
        uni.chooseLocation({
          success: (res) => {
            console.log('chooseLocation success', res)
            this.hasLocation = true
            this.location = this.formatLocation(res.longitude, res.latitude)
            this.locationAddress = res.address
          }
        })
        setTimeout(() => {
          const pages = getCurrentPages()
          const page = pages[pages.length - 1]
          const dialogPages = page.getDialogPages()
          this.dialogPagesNum = dialogPages.length
        }, 500)
      },
      formatLocation: function(longitude:number, latitude:number):Location {
        const longitudeArr = longitude.toString().split('.')
        const latitudeArr = latitude.toString().split('.')
        if(longitudeArr.length>1){
          longitudeArr[1] = longitudeArr[1].substring(0,2)
        }
        if(latitudeArr.length>1){
          latitudeArr[1] = latitudeArr[1].substring(0,2)
        }
        return {
          longitude: longitudeArr,
          latitude: latitudeArr
        }
      },
      clear: function () {
        this.hasLocation = false
      }
    }
  }
</script>

<style>
  .page-body-info {
    padding-bottom: 0;
    height: 440rpx;
  }
  .content{
    background:#FFFFFF;
    padding:40rpx;
    align-items: center;
  }
  .tips {
    font-size: 12px;
    margin: 15px 0;
    opacity: .8;
  }
</style>
