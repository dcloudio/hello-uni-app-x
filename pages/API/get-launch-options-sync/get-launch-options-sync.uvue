<template>
  <page-head title="getLaunchOptionsSync"></page-head>
  <view class="uni-padding-wrap">
    <button @click="getLaunchOptionsSync">getLaunchOptionsSync</button>
    <view v-if="launchOptionsPath.length > 0" class="uni-common-mt">
      <text>应用启动路径：</text>
      <text style="margin-top: 5px">{{ launchOptionsPath }}</text>
    </view>
  </view>
</template>

<script lang="uts">
  type OnShowReturn = {
    appOnShow : OnShowOptions,
    onShowOption : OnShowOptions
  }

  type IOnLaunchOptions = {
    appOnLaunch : OnLaunchOptions,
    launchOptions : OnLaunchOptions
  }
  export default {
    data() {
      return {
        checked: false,
        homePagePath: 'pages/tabBar/component',
        launchOptionsPath: '',
      }
    },
    methods: {
      // 自动化测试
      compareOnLaunchRes() : IOnLaunchOptions {
        const launchOptions = uni.getLaunchOptionsSync();
        const app = getApp()

        const appOnLaunch = app.globalData.launchOptions as OnLaunchOptions
        const res : IOnLaunchOptions = {
          appOnLaunch,
          launchOptions
        }
        return res
      },
      compareOnShowRes() : OnShowReturn {

        // #ifdef APP-ANDROID
        const res : OnShowReturn = {
          appOnShow: {
            path: ''
          } as OnShowOptions,
          onShowOption: {
            path: ''
          } as OnShowOptions
        }
        return res
        // #endif

        // #ifndef APP-ANDROID
        const onShowOption = uni.getEnterOptionsSync();
        const app = getApp()

        const appOnShow = app.globalData.onShowOption as OnShowOptions
        return {
          appOnShow,
          onShowOption
        }
        // #endif
      },
      getLaunchOptionsSync() {
        const launchOptions = uni.getLaunchOptionsSync()
        this.launchOptionsPath = launchOptions.path
        if (launchOptions.path == this.homePagePath) {
          this.checked = true
        }
      },
    },
  }
</script>
