<template>
    <view>
        <page-head :title="title"></page-head>
        <view class="uni-padding-wrap uni-common-mt">
            <view class="uni-btn-v">
                <button @tap="navigateTo" class="uni-btn">跳转新页面，并传递数据</button>
                <button @tap="navigateBack" class="uni-btn">返回上一页</button>
                <button @tap="redirectTo" class="uni-btn">在当前页面打开</button>
                <!-- <button @tap="switchTab"  class="uni-btn">切换到模板选项卡</button> -->
                <button @tap="reLaunch" class="uni-btn">关闭所有页面，打开首页</button>
                <!-- #ifdef APP-PLUS -->
                <button @tap="customAnimation" class="uni-btn">使用自定义动画打开页面</button>
                <!-- #endif -->
                <!-- #ifdef APP-PLUS || H5 -->
                <button @tap="preloadPage" class="uni-btn">预载复杂页面</button>
                <!-- #endif -->
                <!-- #ifdef APP-PLUS -->
                <button @tap="unPreloadPage" class="uni-btn">取消页面预载</button>
                <!-- #endif -->
                <!-- #ifdef APP-PLUS || H5 -->
                <!-- <button @tap="navigateToPreloadPage" class="uni-btn">打开复杂页面</button> -->
                <!-- #endif -->
            </view>
        </view>
    </view>
</template>
<script lang="ts">
    const preloadPageUrl = '/pages/extUI/calendar/calendar'
    export default {
        data() {
            return {
                title: 'navigate'
            }
        },
        methods: {
            navigateTo() {
                uni.navigateTo({
                    url: '/pages/API/navigator/new-page/new-uvue-page-1?data=Hello'
                })
            },
            navigateBack() {
                uni.navigateBack({
                    delta: 1
                });
            },
            redirectTo() {
                uni.redirectTo({
                    url: '/pages/API/navigator/new-page/new-uvue-page-1?data=Hello'
                });
            },
            switchTab() {
                uni.switchTab({
                    url: '/pages/tabBar/template/template'
                });
            },
            reLaunch() {
                // if (this.hasLeftWin) {
                // 	uni.reLaunch({
                // 		url: '/pages/component/view/view'
                // 	});
                // 	return;
                // }
                uni.reLaunch({
                    url: '/pages/tabBar/component/component'
                });
            },
            customAnimation() {
                uni.navigateTo({
                    url: '/pages/API/navigator/new-page/new-uvue-page-1?data=使用自定义动画打开页面',
                    animationType: 'slide-in-bottom',
                    animationDuration: 200
                })
            },
            preloadPage() {
                uni.showToast({
                    icon: 'none',
                    title: '暂不支持'
                })
                // uni.preloadPage({
                // 	url: preloadPageUrl,
                // 	success(){
                // 		uni.showToast({
                // 			title:'页面预载成功'
                // 		})
                // 	},
                // 	fail(){
                // 		uni.showToast({
                // 			title:'页面预载失败'
                // 		})
                // 	}
                // })
            },
            unPreloadPage() {
                uni.showToast({
                    icon: 'none',
                    title: '暂不支持'
                })
                // uni.unPreloadPage({
                // 	url: preloadPageUrl
                // })
            },
            navigateToPreloadPage() {
                uni.navigateTo({
                    url: preloadPageUrl
                })
            }
        }
    }
</script>