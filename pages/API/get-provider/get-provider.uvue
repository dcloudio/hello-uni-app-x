<template>
	<!-- #ifdef APP -->
	<scroll-view class="page-scroll-view">
	<!-- #endif -->
		<view class="page">
			<page-head :title="title"></page-head>
			<view class="service-item" v-for="(item, index) in serviceList" :key="index">
				<text class="service-name">{{item.name}}:</text>
				<view class="provider-list">
					<text class="provider-item" v-for="(item2, index2) in item.provider" :key="index2">
						{{item2}}
						{{item.providerObj.length > 0 ? ':'+ JSON.stringify(item.providerObj[index2]) : '' }}
					</text>
				</view>
			</view>
			<button class="btn-get-provider" type="primary" @click="getProviderIds">getProviderIds</button>
			<button class="btn-get-provider" type="primary" @click="getProviderObject">getProviderObject</button>
		</view>
	<!-- #ifdef APP -->
	</scroll-view>
	<!-- #endif -->
</template>

<script>

	type ProviderItem = {
		service : string,
		name : string,
		provider : string[],
		providerObj : UniProvider[]
	}


	export default {
		data() {
			return {
				title: 'provider',
				flag: false,
				serviceList: [
					{ service: "oauth", name: "登陆", provider: [], providerObj: [] },
					{ service: "share", name: "分享", provider: [], providerObj: [] },
					{ service: "payment", name: "支付", provider: [], providerObj: [] },
					{ service: "push", name: "推送", provider: [], providerObj: [] },
					{ service: "location", name: "定位", provider: [], providerObj: [] }
				] as ProviderItem[],
				providerObjList: [] as UniProvider[]
			}
		},
		methods: {
			getProviderIds() {
				this.serviceList.forEach((item : ProviderItem) => {
					let providerIds = uni.getProviderIds({
						service: item.service
					})
					this.updateProvider(item.service, providerIds);
				})
			},
			updateProvider(service : string, provider ?: string[] | null) {
				const item : ProviderItem | null = this.serviceList.find((item : ProviderItem) : boolean => {
					return item.service == service
				});
				if (item != null && provider != null) {
					item.provider = provider
				}
			},
			getProviderObject() {
				this.flag = true
				this.getProviderIds()
				let objList = []
				this.serviceList.forEach((value) => {
					value.provider.forEach((provider) => {
						let obj = uni.getProviderObject({
							service: value.service,
							provider: provider
						})
						if (obj != null) {
							value.providerObj.add(obj)
						}

					})
				})
			}
		},
	}
</script>

<style>
	.page {
		padding: 15px;
	}

	.service-item {
		margin-top: 10px;
	}

	.service-name {
		font-weight: bold;
	}

	.provider-list {
		margin-left: 32px;
	}

	.provider-item {
		line-height: 1.5;
	}

	.btn-get-provider {
		margin-top: 30px;
	}
</style>
