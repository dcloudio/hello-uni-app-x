<template>
  <page-head title="share-element"></page-head>
  <view class="main">
    <share-element class="share-element" share-key="left" :shuttle-on-pop="shuttleOnPop"
      :transition-on-gesture="transitionOnGesture" @tap="openPage()">
      <image style="width: 100px;height: 100px;"
        src="https://web-ext-storage.dcloud.net.cn/hello-uni-app-x/drop-card-1.jpg" mode="widthFix">
      </image>
    </share-element>
  </view>
  <button type="primary" @click="openPage" class="button">
    打开share-element页面
  </button>
  <scroll-view style="flex: 1">
    <view class="content">
      <boolean-data :defaultValue="false" title="transition-on-gesture= true(仅iOS生效)"
        @change="changeTransitionOnGesture"></boolean-data>
      <text class="uni-common-mt choose-open-animation-type-title">animationType(页面动画降级):</text>
      <radio-group class="choose-open-animation-type-radio-group" @change="handleOpenAnimationType">
        <radio class="ml-10 uni-common-mt" v-for="item in openAnimationTypeList" :key="item" :value="item"
          :checked="openAnimationType == item">{{ item }}
        </radio>
      </radio-group>
      <enum-data :items="shuttle_on_pop" title="shuttleOnPop" @change="changeShuttleOnPop"></enum-data>
      <enum-data :items="shuttle_on_push" title="shuttleOnPush" @change="changeShuttleOnPush"></enum-data>
    </view>
  </scroll-view>
  <view style="height: 80px;"></view>
  <share-element class="bottomWrap" share-key="bottom" @tap="openPage()" transitionOnGesture=true>
    <view class="bottom">
      <text style="color: white;">share-element(底部固定)</text>
    </view>
  </share-element>
</template>
<script>
  type ShareElementOpenAnimationType =
    'auto' |
    'none' |
    'slide-in-right' |
    'slide-in-left' |
    'slide-in-top' |
    'slide-in-bottom' |
    'fade-in' |
    'pop-in' |
    'zoom-out' |
    'zoom-fade-out'

  import { ItemType } from '@/components/enum-data/enum-data-types'
  export default {
    data() {
      return {
        shuttleOnPop: "to",
        shuttleOnPush: "to",
        transitionOnGesture: false,
        transition_on_gesture: [{ "value": 1, "name": "true" }, { "value": 2, "name": "false" }] as ItemType[],
        shuttle_on_pop: [{"value": 1, "name":"from"}, { "value": 2, "name": "to" }] as ItemType[],
        shuttle_on_push: [{ "value": 1, "name": "from" }, { "value": 2, "name": "to" }] as ItemType[],
        openAnimationType: 'slide-in-right' as ShareElementOpenAnimationType,
        openAnimationTypeList: [
          'auto',
          'none',
          'slide-in-right',
          'slide-in-left',
          'slide-in-top',
          'slide-in-bottom',
          'fade-in',
          'pop-in',
          'zoom-out',
          'zoom-fade-out'
        ]
      }
    },
    methods: {
      openPage() {
        uni.navigateTo({
          animationType: this.openAnimationType,
          url: "/pages/component/share-element/share-element-to?shuttleOnPush=" + this.shuttleOnPush + "&transitionOnGesture=" + this.transitionOnGesture
        })
      },
      changeShuttleOnPop(checked : number) {
        console.log(`changeShuttleOnPop:${checked}`)
        this.shuttleOnPop = checked == 1 ? "from" : "to"
      },
      changeShuttleOnPush(checked : number) {
        this.shuttleOnPush = checked == 1 ? "from" : "to"
      },
      changeTransitionOnGesture(checked : boolean) {
        console.log(`changeTransitionOnGesture:${checked}`)
        this.transitionOnGesture = checked
      },
      handleOpenAnimationType(e : RadioGroupChangeEvent) {
        this.openAnimationType = e.detail.value as ShareElementOpenAnimationType
      }
    }
  }
</script>

<style>
  .ml-10 {
    margin-left: 10px;
  }

  .choose-open-animation-type-title {
    font-weight: bold;
  }

  .choose-open-animation-type-radio-group {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .bottomWrap {
    width: 100%;
    bottom: 0px;
    height: 80px;
    position: fixed;
  }

  .bottom {
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    background-color: #007aff;
  }

  .main {
    padding: 5px 0;
    align-items: center;
    justify-content: center;
  }
</style>
