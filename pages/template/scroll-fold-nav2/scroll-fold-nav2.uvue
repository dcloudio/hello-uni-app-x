<template>
  <view class="page">
    <scroll-view :scroll-y="true" @scroll="onScroll" class="scroll-view" bounces="false">
      <view class="content">
        <view style="height: 110px;">
          <!-- 垫高专用 -->
        </view>
        <view v-for="(item,index) in 20" :key="index" style="height: 100px;background-color: #FFF;">
          content-{{item}}
        </view>
      </view>
    </scroll-view>

    <view ref="top-box" class="top-box" style="height:110px;background-color:rgba(255,255,255,0)">
      <view ref="scroll-fold-nav" class="scroll-fold-nav">
        <view style="margin-left: 30px;">DCloud 为开发者而生</view>
      </view>
      <view @click="back" class="back" style="position: absolute;top:35px;left: 8px;">
        <image src="/static/template/scroll-fold-nav/back.png" style="width: 20px;" mode="widthFix"></image>
      </view>
      <view ref="search" class="search" @click="toSearchPage" style="width:700rpx;top:0px">
        <view style="flex-direction: row;">
          <image src="/static/template/scroll-fold-nav/search.png" style="width: 15px;" mode="widthFix"></image>
          <text class="search-tip-text">请输入你要搜索的内容</text>
        </view>
        <text class="search-btn">搜索</text>
      </view>
    </view>

  </view>
</template>

<script>
  import ScrollEvent from 'io.dcloud.uniapp.runtime.ScrollEvent';
  export default {
    data() {
      return {
        scrollTop: 0,
        searchWidth: 700,
        searchNode: null as INode | null,
        boxNode: null as INode | null,
        navNode: null as INode | null
      }
    },
    methods: {
      onScroll(e : ScrollEvent) {
        let scrollTop = e.detail.scrollTop
        this.boxNode?.style?.setProperty('height', (110 - (scrollTop > 40 ? 40 : scrollTop)) + 'px');
        this.boxNode?.style?.setProperty('backgroundColor', 'rgba(255, 255, 255, ' + (scrollTop * 3 > 100 ? 100 : scrollTop * 3) / 100.0 + ')');
        this.navNode?.style?.setProperty('opacity', 1 - (scrollTop * 3 > 100 ? 100 : scrollTop * 3) / 100.0);
        this.searchNode?.style?.setProperty('width', 700 - (scrollTop > 40 ? 40 : scrollTop) + 'rpx');
        this.searchNode?.style?.setProperty('top', 0 - (scrollTop > 40 ? 40 : scrollTop) + 'px');
        this.scrollTop = scrollTop;
      },
      back() {
        // uni.navigateBack()  // 这么写用不了
        // 这么写可以用
        uni.navigateBack({
          success(result) {
            console.log('navigateBack success', result.errMsg)
          },
          fail(error) {
            console.log('navigateBack fail', error.errMsg)
          },
          complete(result) {
            console.log('navigateBack complete', result.errMsg)
          },
        })

        // uni.switchTab({
        //   url:'/pages/tabBar/template'
        // })

      },
      toSearchPage() {
        uni.showToast({
          title: '暂不支持',
          icon: 'none'
        });
      }
    },
    onLoad() {
    },
    onReady() {
      this.searchNode = this.$refs['search'] as INode;
      this.boxNode = this.$refs['top-box'] as INode;
      this.navNode = this.$refs['scroll-fold-nav'] as INode;
    }
  }
</script>

<style>
  .page {
    flex: 1;
    background-color: #fbdf0d;
  }

  .scroll-view {
    flex: 1;
  }

  .top-box {
    position: fixed;
    top: 0;
    padding-top: 25px;
    align-items: flex-end;
    border-bottom: 1px solid #efefef;
  }

  .scroll-fold-nav {
    height: 44px;
    width: 750rpx;
    justify-content: center;
  }

  .search {
    background-color: #FFFFFF;
    border: 1px solid #fbdf0d;
    height: 35px;
    border-radius: 100px;
    margin: 0 25rpx;
    padding: 8px;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }

  .search-tip-text {
    font-size: 12px;
    color: #666;
  }

  .search-btn {
    font-size: 12px;
    background-color: #ff6900;
    color: #FFF;
    padding: 5px 8px;
    border-radius: 100px;
  }
</style>