



















    import { State, state, setColorIndex } from '@/store/index.uts'
    export default {
        data() {
            return {
                data: '',
                stateData: state as State
            }
        },
        methods: {
            changeColor() {
                setColorIndex(state.colorIndex > 1 ? 0 : state.colorIndex + 1)
            },
            navToUvue() {
                uni.navigateTo({
                    url: 'pages/API/navigator/new-page/new-uvue-page-2'
                })
            },
            navToVue() {
                uni.showToast({
                    icon: 'none',
                    title: '暂不支持'
                })
                // uni.navigateTo({
                //     url:'new-vue-page-2'
                // })
            }
        },
        onLoad(e: Map<string, string>) {
            // TODO 类型后续会做调整
            this.data = e['data']!
        }
    }


const GenPagesAPINavigatorNewPageNewUvuePage1Styles = [new Map<string, Map<string, Map<string, any>>>([["new-page__text", new Map<string, any>([["", new Map<string, any>([["fontSize", 14], ["color", "#666666"]])]])], ["root", new Map<string, any>([["", new Map<string, any>([["flexDirection", "column"]])]])], ["page-body", new Map<string, any>([["", new Map<string, any>([["flex", "1"], ["flexDirection", "column"], ["justifyContent", "flex-start"], ["alignItems", "center"], ["paddingTop", 50]])]])], ["new-page__text-box", new Map<string, any>([["", new Map<string, any>([["paddingTop", 20], ["paddingRight", 20], ["paddingBottom", 20], ["paddingLeft", 20]])]])], ["new-page__color", new Map<string, any>([["", new Map<string, any>([["width", 200], ["height", 100], ["justifyContent", "center"], ["alignItems", "center"]])]])], ["new-page__color-text", new Map<string, any>([["", new Map<string, any>([["fontSize", 14], ["color", "#FFFFFF"], ["lineHeight", 30], ["textAlign", "center"]])]])], ["new-page__button-item", new Map<string, any>([["", new Map<string, any>([["marginTop", 15], ["width", 300]])]])]])]
@Suppress("UNUSED_PARAMETER") function GenPagesAPINavigatorNewPageNewUvuePage1Render(_ctx: GenPagesAPINavigatorNewPageNewUvuePage1): VNode | null {
const _component_button = resolveComponent("button")

  return createElementVNode("view", new Map<string, any | null>([["class", "root"]]), [
    createElementVNode("view", new Map<string, any | null>([["class", "page-body"]]), [
      createElementVNode("view", new Map<string, any | null>([["class", "new-page__text-box"]]), [
        createElementVNode("text", new Map<string, any | null>([["class", "new-page__text"]]), "从上个页面接收到参数：" + toDisplayString(_ctx.data), 1 /* TEXT */)
      ]),
      createElementVNode("view", new Map<string, any | null>([
        ["class", "new-page__color"],
        ["onClick", _ctx.changeColor],
        ["style", normalizeStyle({backgroundColor:_ctx.stateData.currentColor})]
      ]), [
        createElementVNode("text", new Map<string, any | null>([["class", "new-page__color-text"]]), "点击改变颜色")
      ], 12 /* STYLE, PROPS */, ["onClick"]),
      createElementVNode("view", new Map<string, any | null>([["class", "new-page__text-box"]]), [
        createElementVNode("text", new Map<string, any | null>([["class", "new-page__text"]]), "点击上方色块在页面之间进行通讯")
      ]),
      createElementVNode("view", new Map<string, any | null>([["class", "new-page__button"]]), [
        createVNode(_component_button, new Map<string, any | null>([
          ["class", "new-page__button-item"],
          ["onClick", _ctx.navToUvue]
        ]), new Map<string, any | null>([
          ["default", ((): any[] => ["跳转UVUE页面"])],
          ["_", 1 /* STABLE */]
        ]), 8 /* PROPS */, ["onClick"]),
        createVNode(_component_button, new Map<string, any | null>([
          ["class", "new-page__button-item"],
          ["onClick", _ctx.navToVue]
        ]), new Map<string, any | null>([
          ["default", ((): any[] => ["跳转VUE页面"])],
          ["_", 1 /* STABLE */]
        ]), 8 /* PROPS */, ["onClick"])
      ])
    ])
  ])
}