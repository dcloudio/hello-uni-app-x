


























    type Page = {
        name : string,
        enable ?: boolean,
        url : string
    }
    type ListItem = {
        id : string,
        name : string,
        open : boolean,
        pages : Page[],
        url ?: string,
        enable ?: boolean
    }
    export default {
        data() {
            return {
                list: [{
                    id: "page",
                    name: "界面",
                    open: false,
                    pages: [
                        {
                            name: "设置导航条",
                            url: "set-navigation-bar-title"
                        },

                        {
                            name: "原生子窗体",
                            url: "subnvue",
                        },

                        {
                            name: "页面跳转",
                            url: "navigator",
                            enable: true
                        },

                        {
                            name: "设置TabBar",
                            url: "set-tabbar",
                        },

                        {
                            name: "下拉刷新",
                            url: "pull-down-refresh",
                        },
                        {
                            name: "创建动画",
                            url: "animation",
                        },

                        {
                            name: "创建绘画",
                            url: "canvas",
                        },


                        {
                            name: "节点信息",
                            url: "get-node-info",
                        },

                        {
                            name: "节点布局交互状态",
                            url: "intersection-observer",
                        },
                        {
                            name: "显示操作菜单",
                            url: "action-sheet",
                        },
                        {
                            name: "显示模态弹窗",
                            url: "modal",
                        },
                        {
                            name: "显示加载提示框",
                            url: "show-loading",
                        },
                        {
                            name: "显示消息提示框",
                            url: "toast",
                        },
                    ] as Page[],
                },
                {
                    id: "device",
                    name: "设备",
                    open: false,
                    pages: [
                        {
                            name: "获取设备网络状态",
                            url: "get-network-type",
                        },
                        {
                            name: "获取设备系统信息",
                            url: "get-system-info",
                        },
                        {
                            name: "打电话",
                            url: "make-phone-call",
                        },

                        {
                            name: "震动",
                            url: "vibrate",
                        },
                        {
                            name: "添加手机联系人",
                            url: "add-phone-contact",
                        },
                        {
                            name: "扫码",
                            url: "scan-code",
                        },


                        {
                            name: "剪贴板",
                            url: "clipboard",
                        },


                        {
                            name: "屏幕亮度",
                            url: "brightness",
                        },


                        {
                            name: "蓝牙",
                            url: "bluetooth",
                        },


                        {
                            name: "生物认证",
                            url: "soter",
                        },


                        {
                            name: "iBeacon",
                            url: "ibeacon",
                        },


                        {
                            name: "监听加速度传感器",
                            url: "on-accelerometer-change",
                        },


                        {
                            name: "监听罗盘数据",
                            url: "on-compass-change",
                        },


                        {
                            name: "监听距离传感器",
                            url: "/platforms/app-plus/proximity/proximity",
                        },
                        {
                            name: "监听方向传感器",
                            url: "/platforms/app-plus/orientation/orientation",
                        },

                    ] as Page[],
                },
                {
                    id: "network",
                    name: "网络",
                    open: false,
                    pages: [
                        {
                            name: "发起一个请求",
                            url: "request",
                        },
                        {
                            name: "上传文件",
                            url: "upload-file",
                        },
                        {
                            name: "下载文件",
                            url: "download-file",
                        },
                    ] as Page[],
                },
                {
                    id: "websocket",
                    name: "websocket",
                    open: false,
                    pages: [

                        {
                            name: "socketTask",
                            url: "websocket-socketTask",
                        },

                        {
                            name: "全局websocket",
                            url: "websocket-global",
                        },
                    ] as Page[],
                },
                {
                    id: "media",
                    name: "媒体",
                    open: false,
                    pages: [
                        {
                            name: "图片",
                            url: "image",
                        },

                        {
                            name: "音频",
                            url: "inner-audio",
                        },


                        {
                            name: "录音",
                            url: "voice",
                        },
                        {
                            name: "背景音频",
                            url: "background-audio",
                        },


                        {
                            name: "视频",
                            url: "video",
                        },


                        {
                            name: "文件",
                            url: "file",
                        },


                        {
                            name: "保存媒体到本地",
                            url: "save-media",
                        },

                    ] as Page[],
                },

                {
                    id: "location",
                    name: "位置",
                    open: false,
                    pages: [
                        {
                            name: "获取当前位置",
                            url: "get-location",
                        },
                        {
                            name: "使用地图查看位置",
                            url: "open-location",
                        },

                        {
                            name: "使用地图选择位置",
                            url: "choose-location",
                        },


                        {
                            name: "地图控制",
                            url: "map",
                        },


                        {
                            name: "地图搜索",
                            url: "map-search",
                        },

                    ] as Page[],
                },

                {
                    id: "storage",
                    name: "数据",
                    open: false,
                    pages: [
                        {
                            name: "数据存储（key-value）",
                            url: "storage",
                        },

                        {
                            name: "SQLite",
                            url: "sqlite",
                        },

                    ] as Page[],
                },

                {
                    id: "rewarded-video-ad",
                    url: "rewarded-video-ad",
                    name: "激励视频广告",
                    open: false,
                    enable: false,
                    pages: [] as Page[]
                },


                {
                    id: "full-screen-video-ad",
                    url: "full-screen-video-ad",
                    name: "全屏视频广告",
                    open: false,
                    enable: false,
                    pages: [] as Page[]
                },


                {
                    id: "login",
                    name: "登录",
                    open: false,
                    pages: [
                        {
                            name: "登录",
                            url: "login",
                        },
                        {
                            name: "获取用户信息",
                            url: "get-user-info",
                        },
                    ] as Page[],
                },


                {
                    id: "share",
                    name: "分享",
                    open: false,
                    pages: [
                        {
                            name: "分享",
                            url: "share",
                        },
                    ] as Page[],
                },


                {
                    id: "payment",
                    name: "支付",
                    open: false,
                    pages: [
                        {
                            name: "发起支付",
                            url: "request-payment",
                        },
                    ] as Page[],
                },


                {
                    id: "speech",
                    name: "语音",
                    open: false,
                    pages: [
                        {
                            name: "语音识别",
                            url: "/platforms/app-plus/speech/speech",
                        },
                    ] as Page[],
                },
                {
                    id: "push",
                    name: "推送",
                    open: false,
                    pages: [
                        {
                            name: "推送",
                            url: "/platforms/app-plus/push/push",
                        },
                    ] as Page[],
                },

                ] as ListItem[],
                arrowUpIcon: '/static/icons/arrow-up.png',
                arrowDownIcon: '/static/icons/arrow-down.png',
                arrowRightIcon: '/static/icons/arrow-right.png',
            }
        },
        methods: {
            triggerCollapse(index ?: number, item : ListItem) {
                if (item.pages.length == 0) {
                    const page : Page = {
                        name: item.name,
                        enable: item.enable,
                        url: item.url!
                    }
                    this.goDetailPage(page);
                    return;
                }
                for (var i = 0; i < this.list.length; ++i) {
                    if (index == i) {
                        this.list[i].open = !this.list[i].open;
                    } else {
                        this.list[i].open = false;
                    }
                }
            },
            goDetailPage(e : Page) {
                if (e.enable != true) {
                    uni.showToast({
                        icon: 'none',
                        title: '暂不支持'
                    })
                    return
                }
                const url = e.url.indexOf('platform') > -1 ? e.url : `/pages/API/${e.url}/${e.url}`
                uni.navigateTo({
                    url
                })
            }
        }
    }


const GenPagesTabBarAPIAPIStyles = [new Map<string, Map<string, Map<string, any>>>([["text", new Map<string, any>([["", new Map<string, any>([["color", "#7A7E83"], ["fontSize", 14], ["lineHeight", 20]])]])], ["uni-icon", new Map<string, any>([["", new Map<string, any>([["width", 14], ["height", 14]])]])], ["uni-container", new Map<string, any>([["", new Map<string, any>([["paddingTop", 15], ["paddingRight", 15], ["paddingBottom", 15], ["paddingLeft", 15], ["backgroundColor", "#f8f8f8"]])]])], ["uni-header-logo", new Map<string, any>([["", new Map<string, any>([["display", "flex"], ["paddingTop", 15], ["paddingRight", 15], ["paddingBottom", 15], ["paddingLeft", 15], ["flexDirection", "column"], ["justifyContent", "center"], ["alignItems", "center"], ["marginTop", "10rpx"]])]])], ["uni-header-image", new Map<string, any>([["", new Map<string, any>([["width", 80], ["height", 80]])]])], ["uni-hello-text", new Map<string, any>([["", new Map<string, any>([["marginBottom", 20], ["color", "#7A7E83"]])]])], ["hello-text", new Map<string, any>([["", new Map<string, any>([["color", "#7A7E83"], ["fontSize", 14], ["lineHeight", 20]])]])], ["hello-link", new Map<string, any>([["", new Map<string, any>([["color", "#7A7E83"], ["fontSize", 14], ["lineHeight", 20]])]])], ["uni-panel", new Map<string, any>([["", new Map<string, any>([["marginBottom", 12]])]])], ["text-disabled", new Map<string, any>([["", new Map<string, any>([["color", "#a0a0a0"]])]])], ["uni-panel-h", new Map<string, any>([["", new Map<string, any>([["display", "flex"], ["backgroundColor", "#ffffff"], ["!flexDirection", "row"], ["!justifyContent", "space-between"], ["!alignItems", "center"], ["paddingTop", 12], ["paddingRight", 12], ["paddingBottom", 12], ["paddingLeft", 12]])]])], ["uni-panel-h-on", new Map<string, any>([["", new Map<string, any>([["backgroundColor", "#f0f0f0"]])]])], ["uni-panel-text", new Map<string, any>([["", new Map<string, any>([["color", "#000000"], ["fontSize", 14], ["fontWeight", "normal"]])]])], ["uni-panel-icon", new Map<string, any>([["", new Map<string, any>([["marginLeft", 15], ["color", "#999999"], ["fontSize", 14], ["fontWeight", "normal"], ["transform", "rotate(0deg)"], ["transitionDuration", 0], ["transitionProperty", "transform"]])]])], ["uni-panel-icon-on", new Map<string, any>([["", new Map<string, any>([["transform", "rotate(180deg)"]])]])], ["uni-navigate-item", new Map<string, any>([["", new Map<string, any>([["display", "flex"], ["flexDirection", "row"], ["alignItems", "center"], ["backgroundColor", "#FFFFFF"], ["borderTopStyle", "solid"], ["borderTopColor", "#f0f0f0"], ["borderTopWidth", 1], ["paddingTop", 12], ["paddingRight", 12], ["paddingBottom", 12], ["paddingLeft", 12], ["justifyContent", "space-between"], ["backgroundColor:active", "#f8f8f8"]])]])], ["uni-navigate-text", new Map<string, any>([["", new Map<string, any>([["color", "#000000"], ["fontSize", 14], ["fontWeight", "normal"]])]])], ["uni-navigate-icon", new Map<string, any>([["", new Map<string, any>([["marginLeft", 15], ["color", "#999999"], ["fontSize", 14], ["fontWeight", "normal"]])]])], ["arrow", new Map<string, any>([["", new Map<string, any>([["width", 8], ["height", 8], ["borderTopWidth", 2], ["borderTopStyle", "solid"], ["borderTopColor", "#cccccc"], ["borderLeftWidth", 2], ["borderLeftStyle", "solid"], ["borderLeftColor", "#cccccc"]])]])], ["arrow-right", new Map<string, any>([["", new Map<string, any>([["transform", "rotate(135deg)"]])]])], ["arrow-up", new Map<string, any>([["", new Map<string, any>([["transform", "rotate(45deg)"]])]])], ["arrow-down", new Map<string, any>([["", new Map<string, any>([["transform", "rotate(-135deg)"]])]])], ["@TRANSITION", new Map<string, any>([["uni-panel-icon", new Map<string, any>([["duration", 0], ["property", "transform"]])]])]])]
@Suppress("UNUSED_PARAMETER") function GenPagesTabBarAPIAPIRender(_ctx: GenPagesTabBarAPIAPI): VNode | null {
const _component_u_link = resolveComponent("u-link")

  return createElementVNode("view", new Map<string, any | null>([["class", "uni-container"]]), [
    createElementVNode("view", new Map<string, any | null>([["class", "uni-header-logo"]]), [
      createElementVNode("image", new Map<string, any | null>([
        ["class", "uni-header-image"],
        ["src", "/static/apiIndex.png"]
      ]))
    ]),
    createElementVNode("view", new Map<string, any | null>([["class", "uni-hello-text"]]), [
      createElementVNode("text", new Map<string, any | null>([["class", "hello-text"]]), "以下将演示uni-app接口能力，详细文档见："),
      createVNode(_component_u_link, new Map<string, any | null>([
        ["href", 'https://uniapp.dcloud.io/api/'],
        ["text", 'https://uniapp.dcloud.io/api/'],
        ["inWhiteList", true]
      ]), null, 8 /* PROPS */, ["href", "text"])
    ]),
    createElementVNode(Fragment, null, RenderHelpers.renderList(_ctx.list, (item, index, _):VNode => {
      return createElementVNode("view", new Map<string, any | null>([
        ["class", "uni-panel"],
        ["key", item.id]
      ]), [
        createElementVNode("view", new Map<string, any | null>([
          ["class", normalizeClass(["uni-panel-h", item.open ? 'uni-panel-h-on' : ''])],
          ["onClick", () => {_ctx.triggerCollapse(index, item)}]
        ]), [
          createElementVNode("text", new Map<string, any | null>([
            ["class", normalizeClass(["uni-panel-text", item.enable == false ? 'text-disabled' : ''])]
          ]), toDisplayString(item.name), 3 /* TEXT, CLASS */),
          createElementVNode("image", new Map<string, any | null>([
            ["src", item.pages.length > 0 ? item.open ? _ctx.arrowUpIcon : _ctx.arrowDownIcon : _ctx.arrowRightIcon],
            ["class", "uni-icon"]
          ]), null, 8 /* PROPS */, ["src"])
        ], 10 /* CLASS, PROPS */, ["onClick"]),
        isTrue(item.open)
          ? createElementVNode("view", new Map<string, any | null>([
              ["key", 0],
              ["class", "uni-panel-c"]
            ]), [
              createElementVNode(Fragment, null, RenderHelpers.renderList(item.pages, (page, key, _):VNode => {
                return createElementVNode("view", new Map<string, any | null>([
                  ["class", "uni-navigate-item"],
                  ["key", key],
                  ["onClick", () => {_ctx.goDetailPage(page)}]
                ]), [
                  createElementVNode("text", new Map<string, any | null>([
                    ["class", normalizeClass(["uni-navigate-text", page.enable != true ? 'text-disabled' : ''])]
                  ]), toDisplayString(page.name), 3 /* TEXT, CLASS */),
                  createElementVNode("image", new Map<string, any | null>([
                    ["src", _ctx.arrowRightIcon],
                    ["class", "uni-icon"]
                  ]), null, 8 /* PROPS */, ["src"])
                ], 8 /* PROPS */, ["onClick"])
              }), 128 /* KEYED_FRAGMENT */)
            ])
          : createCommentVNode("v-if", true)
      ])
    }), 128 /* KEYED_FRAGMENT */)
  ])
}