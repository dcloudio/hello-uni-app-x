












































    type ItemType = {
        value : string,
        name : string,
    }
    export default {
        data() {
            return {
                title: 'radio 单选框',
                items: [{
                    value: 'USA',
                    name: '美国'
                },
                {
                    value: 'CHN',
                    name: '中国'
                },
                {
                    value: 'BRA',
                    name: '巴西'
                },
                {
                    value: 'JPN',
                    name: '日本'
                },
                {
                    value: 'ENG',
                    name: '英国'
                },
                {
                    value: 'FRA',
                    name: '法国'
                },
                ] as ItemType[],
                current: 0
            }
        },
        methods: {
            radioChange(e : string) {
                for (let i = 0; i < this.items.length; i++) {
                    if (this.items[i].value === e) {
                        this.current = i;
                        break;
                    }
                }
            }
        }
    }


const GenPagesComponentRadioRadioStyles = [new Map<string, Map<string, Map<string, any>>>([["common-page-head", new Map<string, any>([["", new Map<string, any>([["paddingTop", "35rpx"], ["paddingRight", "35rpx"], ["paddingBottom", "35rpx"], ["paddingLeft", "35rpx"], ["flexDirection", "row"], ["justifyContent", "center"]])]])], ["common-page-head-title-box", new Map<string, any>([["", new Map<string, any>([["paddingTop", 0], ["paddingRight", "40rpx"], ["paddingBottom", 0], ["paddingLeft", "40rpx"], ["height", "88rpx"], ["borderBottomWidth", "2rpx"], ["borderBottomStyle", "solid"], ["borderBottomColor", "#D8D8D8"]])]])], ["common-page-head-title", new Map<string, any>([["", new Map<string, any>([["lineHeight", "88rpx"], ["fontSize", "30rpx"], ["color", "#BEBEBE"]])]])], ["uni-list-cell", new Map<string, any>([["", new Map<string, any>([["justifyContent", "flex-start"]])]])]])]
@Suppress("UNUSED_PARAMETER") function GenPagesComponentRadioRadioRender(_ctx: GenPagesComponentRadioRadio): VNode | null {
const _component_page_head = resolveComponent("page-head")
const _component_radio = resolveComponent("radio")
const _component_radio_group = resolveComponent("radio-group")

  return createElementVNode("view", null, [
    createVNode(_component_page_head, new Map<string, any | null>([["title", _ctx.title]]), null, 8 /* PROPS */, ["title"]),
    createElementVNode("view", new Map<string, any | null>([["class", "uni-padding-wrap"]]), [
      createElementVNode("view", new Map<string, any | null>([["class", "uni-title uni-common-mt"]]), [
        createElementVNode("text", new Map<string, any | null>([["class", "uni-title-text"]]), " 默认样式 ")
      ]),
      createElementVNode("view", new Map<string, any | null>([["class", "uni-flex uni-row"]]), [
        createVNode(_component_radio, new Map<string, any | null>([
          ["value", "r1"],
          ["checked", true],
          ["style", "margin-right: 30rpx;"]
        ]), new Map<string, any | null>([
          ["default", ((): any[] => [
            createElementVNode("text", null, "选中")
          ])],
          ["_", 1 /* STABLE */]
        ])),
        createVNode(_component_radio, new Map<string, any | null>([["value", "r2"]]), new Map<string, any | null>([
          ["default", ((): any[] => [
            createElementVNode("text", null, "未选中")
          ])],
          ["_", 1 /* STABLE */]
        ]))
      ])
    ]),
    createElementVNode("view", new Map<string, any | null>([["class", "uni-padding-wrap"]]), [
      createElementVNode("view", new Map<string, any | null>([["class", "uni-title uni-common-mt"]]), [
        createElementVNode("text", new Map<string, any | null>([["class", "uni-title-text"]]), " 不同颜色和尺寸的radio ")
      ]),
      createElementVNode("view", new Map<string, any | null>([["class", "uni-flex uni-row"]]), [
        createVNode(_component_radio, new Map<string, any | null>([
          ["value", "r1"],
          ["checked", true],
          ["color", "#FFCC33"],
          ["style", "transform:scale(0.7); margin-right: 30rpx;"]
        ]), new Map<string, any | null>([
          ["default", ((): any[] => [
            createElementVNode("text", null, "选中 ")
          ])],
          ["_", 1 /* STABLE */]
        ])),
        createVNode(_component_radio, new Map<string, any | null>([
          ["value", "r2"],
          ["color", "#FFCC33"],
          ["style", "transform:scale(0.7)"]
        ]), new Map<string, any | null>([
          ["default", ((): any[] => [
            createElementVNode("text", null, "未选中")
          ])],
          ["_", 1 /* STABLE */]
        ]))
      ])
    ]),
    createElementVNode("view", new Map<string, any | null>([["class", "uni-padding-wrap"]]), [
      createElementVNode("view", new Map<string, any | null>([["class", "uni-title uni-common-mt"]]), [
        createElementVNode("text", new Map<string, any | null>([["class", "uni-title-text"]]), " 推荐展示样式 ")
      ])
    ]),
    createElementVNode("view", new Map<string, any | null>([["class", "uni-list"]]), [
      createVNode(_component_radio_group, new Map<string, any | null>([["onChange", _ctx.radioChange]]), new Map<string, any | null>([
        ["default", ((): any[] => [
          createElementVNode(Fragment, null, RenderHelpers.renderList(_ctx.items, (item, index, _):VNode => {
            return createElementVNode("view", new Map<string, any | null>([
              ["class", "uni-list-cell uni-list-cell-pd"],
              ["key", item.value]
            ]), [
              createElementVNode("view", null, [
                createVNode(_component_radio, new Map<string, any | null>([
                  ["value", item.value],
                  ["checked", index === _ctx.current]
                ]), new Map<string, any | null>([
                  ["default", ((): any[] => [
                    createElementVNode("text", null, toDisplayString(item.name), 1 /* TEXT */)
                  ])],
                  ["_", 2 /* DYNAMIC */]
                ]), 1032 /* PROPS, DYNAMIC_SLOTS */, ["value", "checked"])
              ])
            ])
          }), 128 /* KEYED_FRAGMENT */)
        ])],
        ["_", 1 /* STABLE */]
      ]), 8 /* PROPS */, ["onChange"])
    ])
  ])
}